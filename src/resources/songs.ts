// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../core/resource';
import { APIPromise } from '../core/api-promise';
import { RequestOptions } from '../internal/request-options';

export class Songs extends APIResource {
  /**
   * Returns a paginated list of all songs generated by the authenticated user,
   * sorted by creation date in descending order. Optionally filter results by title
   * search. You can paginate by passing the last song ID from the previous page.
   */
  list(
    query: SongListParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<SongListResponse> {
    return this._client.get('/songs', { query, ...options });
  }
}

export interface SongListResponse {
  songs: Array<SongListResponse.Song>;
}

export namespace SongListResponse {
  export interface Song {
    id: string;

    attempt: number;

    createdAt: string;

    endTime: string | null;

    lyrics: string;

    outputUrl: string | null;

    startTime: string | null;

    status: 'QUEUED' | 'PENDING_WORKER' | 'PROCESSING' | 'ERRORED' | 'SUCCEEDED' | 'CANCELED';

    updatedAt: string;
  }
}

export interface SongListParams {
  cursor?: string | null;

  limit?: number;

  search?: string | null;
}

export declare namespace Songs {
  export { type SongListResponse as SongListResponse, type SongListParams as SongListParams };
}

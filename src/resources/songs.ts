// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../core/resource';
import { APIPromise } from '../core/api-promise';
import { RequestOptions } from '../internal/request-options';
import { path } from '../internal/utils/path';

export class Songs extends APIResource {
  /**
   * Creates a new song generation job using the provided lyrics. The lyrics must be
   * in English and cannot exceed 380 characters. The job will be queued for
   * processing and you can check its status using the getGeneratedSongById endpoint.
   */
  create(body: SongCreateParams, options?: RequestOptions): APIPromise<SongCreateResponse> {
    return this._client.post('/songs/create', { body, ...options });
  }

  /**
   * Retrieves the details and status of a specific song generation job. Returns null
   * if the song is not found or doesn't belong to the authenticated user.
   */
  retrieve(id: string, options?: RequestOptions): APIPromise<SongRetrieveResponse | null> {
    return this._client.get(path`/songs/${id}`, options);
  }

  /**
   * Returns a paginated list of all songs generated by the authenticated user,
   * sorted by creation date in descending order. Optionally filter results by title
   * search. You can paginate by passing the last song ID from the previous page.
   */
  list(
    query: SongListParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<SongListResponse> {
    return this._client.get('/songs', { query, ...options });
  }
}

export interface SongCreateResponse {
  id: string;
}

export interface SongRetrieveResponse {
  id: string;

  attempt: number;

  createdAt: string;

  endTime: string | null;

  lyrics: string;

  outputUrl: string | null;

  startTime: string | null;

  status: 'QUEUED' | 'PENDING_WORKER' | 'PROCESSING' | 'ERRORED' | 'SUCCEEDED' | 'CANCELED';

  updatedAt: string;

  queuePosition?: number | null;
}

export interface SongListResponse {
  songs: Array<SongListResponse.Song>;
}

export namespace SongListResponse {
  export interface Song {
    id: string;

    attempt: number;

    createdAt: string;

    endTime: string | null;

    lyrics: string;

    outputUrl: string | null;

    startTime: string | null;

    status: 'QUEUED' | 'PENDING_WORKER' | 'PROCESSING' | 'ERRORED' | 'SUCCEEDED' | 'CANCELED';

    updatedAt: string;

    queuePosition?: number | null;
  }
}

export interface SongCreateParams {
  lyrics: string;

  section?: 'verse' | 'chorus' | 'guitar-stabs' | 'all' | 'all_v2';
}

export interface SongListParams {
  cursor?: string | null;

  limit?: number;

  search?: string | null;
}

export declare namespace Songs {
  export {
    type SongCreateResponse as SongCreateResponse,
    type SongRetrieveResponse as SongRetrieveResponse,
    type SongListResponse as SongListResponse,
    type SongCreateParams as SongCreateParams,
    type SongListParams as SongListParams,
  };
}
